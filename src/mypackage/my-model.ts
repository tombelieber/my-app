// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers"

import { CustomMap } from "../mypackage/custom-map.js"

export class MyModel {
  bb: flatbuffers.ByteBuffer | null = null
  bb_pos = 0
  __init(i: number, bb: flatbuffers.ByteBuffer): MyModel {
    this.bb_pos = i
    this.bb = bb
    return this
  }

  static getRootAsMyModel(bb: flatbuffers.ByteBuffer, obj?: MyModel): MyModel {
    return (obj || new MyModel()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    )
  }

  static getSizePrefixedRootAsMyModel(
    bb: flatbuffers.ByteBuffer,
    obj?: MyModel,
  ): MyModel {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH)
    return (obj || new MyModel()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    )
  }

  str1(): string | null
  str1(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
  str1(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 4)
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null
  }

  str2(): string | null
  str2(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
  str2(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 6)
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null
  }

  str3(): string | null
  str3(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
  str3(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 8)
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null
  }

  str4(): string | null
  str4(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
  str4(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 10)
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null
  }

  str5(): string | null
  str5(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
  str5(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 12)
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null
  }

  str6(): string | null
  str6(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
  str6(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 14)
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null
  }

  bool1(): boolean {
    const offset = this.bb!.__offset(this.bb_pos, 16)
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false
  }

  bool2(): boolean {
    const offset = this.bb!.__offset(this.bb_pos, 18)
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false
  }

  bool3(): boolean {
    const offset = this.bb!.__offset(this.bb_pos, 20)
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false
  }

  bool4(): boolean {
    const offset = this.bb!.__offset(this.bb_pos, 22)
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false
  }

  bool5(): boolean {
    const offset = this.bb!.__offset(this.bb_pos, 24)
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false
  }

  bool6(): boolean {
    const offset = this.bb!.__offset(this.bb_pos, 26)
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false
  }

  num1(): number {
    const offset = this.bb!.__offset(this.bb_pos, 28)
    return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0
  }

  num2(): number {
    const offset = this.bb!.__offset(this.bb_pos, 30)
    return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0
  }

  num3(): number {
    const offset = this.bb!.__offset(this.bb_pos, 32)
    return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0
  }

  num4(): number {
    const offset = this.bb!.__offset(this.bb_pos, 34)
    return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0
  }

  num5(): number {
    const offset = this.bb!.__offset(this.bb_pos, 36)
    return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0
  }

  num6(): number {
    const offset = this.bb!.__offset(this.bb_pos, 38)
    return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0
  }

  oMap(obj?: CustomMap): CustomMap | null {
    const offset = this.bb!.__offset(this.bb_pos, 40)
    return offset
      ? (obj || new CustomMap()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!,
        )
      : null
  }

  pMap(obj?: CustomMap): CustomMap | null {
    const offset = this.bb!.__offset(this.bb_pos, 42)
    return offset
      ? (obj || new CustomMap()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!,
        )
      : null
  }

  static startMyModel(builder: flatbuffers.Builder) {
    builder.startObject(20)
  }

  static addStr1(builder: flatbuffers.Builder, str1Offset: flatbuffers.Offset) {
    builder.addFieldOffset(0, str1Offset, 0)
  }

  static addStr2(builder: flatbuffers.Builder, str2Offset: flatbuffers.Offset) {
    builder.addFieldOffset(1, str2Offset, 0)
  }

  static addStr3(builder: flatbuffers.Builder, str3Offset: flatbuffers.Offset) {
    builder.addFieldOffset(2, str3Offset, 0)
  }

  static addStr4(builder: flatbuffers.Builder, str4Offset: flatbuffers.Offset) {
    builder.addFieldOffset(3, str4Offset, 0)
  }

  static addStr5(builder: flatbuffers.Builder, str5Offset: flatbuffers.Offset) {
    builder.addFieldOffset(4, str5Offset, 0)
  }

  static addStr6(builder: flatbuffers.Builder, str6Offset: flatbuffers.Offset) {
    builder.addFieldOffset(5, str6Offset, 0)
  }

  static addBool1(builder: flatbuffers.Builder, bool1: boolean) {
    builder.addFieldInt8(6, +bool1, +false)
  }

  static addBool2(builder: flatbuffers.Builder, bool2: boolean) {
    builder.addFieldInt8(7, +bool2, +false)
  }

  static addBool3(builder: flatbuffers.Builder, bool3: boolean) {
    builder.addFieldInt8(8, +bool3, +false)
  }

  static addBool4(builder: flatbuffers.Builder, bool4: boolean) {
    builder.addFieldInt8(9, +bool4, +false)
  }

  static addBool5(builder: flatbuffers.Builder, bool5: boolean) {
    builder.addFieldInt8(10, +bool5, +false)
  }

  static addBool6(builder: flatbuffers.Builder, bool6: boolean) {
    builder.addFieldInt8(11, +bool6, +false)
  }

  static addNum1(builder: flatbuffers.Builder, num1: number) {
    builder.addFieldFloat64(12, num1, 0.0)
  }

  static addNum2(builder: flatbuffers.Builder, num2: number) {
    builder.addFieldFloat64(13, num2, 0.0)
  }

  static addNum3(builder: flatbuffers.Builder, num3: number) {
    builder.addFieldFloat64(14, num3, 0.0)
  }

  static addNum4(builder: flatbuffers.Builder, num4: number) {
    builder.addFieldFloat64(15, num4, 0.0)
  }

  static addNum5(builder: flatbuffers.Builder, num5: number) {
    builder.addFieldFloat64(16, num5, 0.0)
  }

  static addNum6(builder: flatbuffers.Builder, num6: number) {
    builder.addFieldFloat64(17, num6, 0.0)
  }

  static addOMap(builder: flatbuffers.Builder, oMapOffset: flatbuffers.Offset) {
    builder.addFieldOffset(18, oMapOffset, 0)
  }

  static addPMap(builder: flatbuffers.Builder, pMapOffset: flatbuffers.Offset) {
    builder.addFieldOffset(19, pMapOffset, 0)
  }

  static endMyModel(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject()
    return offset
  }
}
